// <auto-generated />
using AppleFinder.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppleFinder.Migrations
{
    [DbContext(typeof(AppleContext))]
    partial class AppleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppleFinder.Models.Apples", b =>
                {
                    b.Property<int>("ApplesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplesID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplesID");

                    b.ToTable("Apples");
                });

            modelBuilder.Entity("AppleFinder.Models.Map", b =>
                {
                    b.Property<int>("MapID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MapID"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MapID");

                    b.ToTable("Map");
                });

            modelBuilder.Entity("AppleFinder.Models.Members", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("First Name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Last Name");

                    b.Property<string>("State")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.ToTable("Membership");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "19878 Maple Glade Ln",
                            Cell = "231-357-1640",
                            City = "Lake Ann",
                            Email = "mbeckett@nmc.edu",
                            FirstName = "Michelle",
                            LastName = "Beckett",
                            State = "MI",
                            Zip = "49970"
                        },
                        new
                        {
                            ID = 2,
                            Address = "1887 Forest Ln",
                            Cell = "765-441-0032",
                            City = "Nowhere",
                            Email = "hhenderson@gmail.com",
                            FirstName = "Harry",
                            LastName = "Henderson",
                            State = "Ak",
                            Zip = "45987"
                        },
                        new
                        {
                            ID = 3,
                            Address = "1887 Hop Ln",
                            Cell = "887-995-2201",
                            City = "Carrot",
                            Email = "bbunny43@gmail.com",
                            FirstName = "Bugs",
                            LastName = "Bunny",
                            State = "WY",
                            Zip = "49684"
                        });
                });

            modelBuilder.Entity("AppleFinder.Models.Orchard", b =>
                {
                    b.Property<int>("OrchardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrchardId"), 1L, 1);

                    b.Property<int>("ApplesID")
                        .HasColumnType("int");

                    b.Property<int>("MapID")
                        .HasColumnType("int");

                    b.HasKey("OrchardId");

                    b.HasIndex("ApplesID");

                    b.HasIndex("MapID");

                    b.ToTable("Orchard");
                });

            modelBuilder.Entity("AppleFinder.Models.Orchard", b =>
                {
                    b.HasOne("AppleFinder.Models.Apples", "Apples")
                        .WithMany()
                        .HasForeignKey("ApplesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppleFinder.Models.Map", "Map")
                        .WithMany()
                        .HasForeignKey("MapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apples");

                    b.Navigation("Map");
                });
#pragma warning restore 612, 618
        }
    }
}
